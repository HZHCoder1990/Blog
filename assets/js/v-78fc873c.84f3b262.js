"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1133],{3004:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-78fc873c",path:"/iOS/bug-track.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"iOS/bug-track.md",git:{updatedTime:1633942617e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:1}]}}},8129:(n,a,s)=>{s.r(a),s.d(a,{default:()=>b});var e=s(6252);const t=(0,e.uE)('<h4 id="sig-11-崩溃" tabindex="-1"><a class="header-anchor" href="#sig-11-崩溃" aria-hidden="true">#</a> SIG(11) 崩溃</h4><p>现象：</p><ol><li><p>Unity 项目导出的 Xcode 工程通过命令行导出的 ipa 运行一段时间后崩溃；</p></li><li><p>在 Xcode上真机运行正常；</p></li><li><p>通过 Xcode 导出 ipa 运行正常；</p></li><li><p>导出 ipa 命令：</p></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 生成 archive 文件</span>\nxcodebuild <span class="token punctuation">\\</span>\n\t\t-sdk iphoneos <span class="token punctuation">\\</span>\n\t\t-configuration Debug <span class="token punctuation">\\</span>\n\t\t-target <span class="token variable">${target}</span> <span class="token punctuation">\\</span>\n\t\t-scheme <span class="token variable">${target}</span> <span class="token punctuation">\\</span>\n\t\t<span class="token assign-left variable">CODE_SIGN_IDENTITY</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${sign}</span>&quot;</span> <span class="token punctuation">\\</span>\n\t\t<span class="token assign-left variable">PROVISIONING_PROFILE_SPECIFIER</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${profile}</span>&quot;</span> <span class="token punctuation">\\</span>\n\t\t-archivePath <span class="token variable">${archivePath}</span><span class="token punctuation">\\</span>\n\t\t-quiet <span class="token punctuation">\\</span>\n\t\tarchive\n\n<span class="token comment"># 导出 ipa</span>\nxcodebuild <span class="token punctuation">\\</span>\n\t\t-exportArchive <span class="token punctuation">\\</span>\n\t    -archivePath <span class="token variable">${archivePath}</span> <span class="token punctuation">\\</span>\n\t    -exportOptionsPlist <span class="token variable">${exportOptionsPlist}</span> <span class="token punctuation">\\</span>\n\t    -exportPath <span class="token variable">${exportPath}</span> <span class="token punctuation">\\</span>\n\t    -quiet\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ol start="5"><li>Bugly 上报错误信息为：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SIGSEGV\nSEGV_ACCERR\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>思路：</p><p>Xcode 可能会对 ipa 文件做优化，导致命令行导出的 ipa 运行后崩溃；</p><p>优化设置一般是在 <code>Build Settings</code> 中；</p><p>命令行选择的是 <code>Debug</code> 配置；Xcode 默认选中了 <code>Release</code> 配置；</p><p>Xcode 修改编译配置为 <code>Debug</code> , 真机运行一段时间后还是崩溃；</p><ul><li>崩溃由于堆栈调用过深导致</li></ul><p>iOS 线程堆栈大小信息：</p><ul><li>主线程堆栈大小为 1 MB且无法更改；</li><li>辅助线程默认会分配 512 KB 的堆栈大小</li></ul><p>解决方法：</p><ol><li>在 Debug 配置下设置堆栈大小到 16 MB</li></ol><ul><li><code>Xcode</code> -&gt; <code>Build Settings</code> -&gt; <code>Other Linker Flags</code> 添加 <code>-Wl,-stack_size,1000000</code></li></ul><ol start="2"><li>打包脚本制定 Release 配置</li></ol><p>原因：</p><p>Unity 项目采用了 ILRuntime 框架， 导致代码调用层级比较深，会出现爆栈现象。</p><p>参考链接</p>',21),p={href:"https://ourpalm.github.io/ILRuntime/public/v1/guide/FastQA.html",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("ILRuntime 常见问题解答"),i={href:"https://www.oreilly.com/library/view/high-performance-ios/9781491910993/ch04.html",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("Concurrent Programming"),o={href:"https://developer.apple.com/library/archive/qa/qa1419/_index.html",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Customizing Process Stack Size"),u={},b=(0,s(3744).Z)(u,[["render",function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",p,[l,(0,e.Wm)(s)])]),(0,e._)("p",null,[(0,e._)("a",i,[r,(0,e.Wm)(s)])]),(0,e._)("p",null,[(0,e._)("a",o,[c,(0,e.Wm)(s)])])],64)}]])},3744:(n,a)=>{a.Z=(n,a)=>{for(const[s,e]of a)n[s]=e;return n}}}]);