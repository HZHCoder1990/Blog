"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[130],{4991:(a,s,n)=>{n.r(s),n.d(s,{data:()=>e});const e={key:"v-48187af2",path:"/database/mysql.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"shell 连接 Mysql 的几种方式",slug:"shell-连接-mysql-的几种方式",children:[]},{level:3,title:"数据库操作",slug:"数据库操作",children:[]},{level:3,title:"表操作",slug:"表操作",children:[]},{level:3,title:"常见函数",slug:"常见函数",children:[]},{level:3,title:"操作案例",slug:"操作案例",children:[]},{level:3,title:"其他",slug:"其他",children:[]},{level:3,title:"参考",slug:"参考",children:[]}],filePathRelative:"database/mysql.md",git:{updatedTime:1633945792e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:1}]}}},5893:(a,s,n)=>{n.r(s),n.d(s,{default:()=>m});var e=n(6252);const t=(0,e.uE)('<p align="right">2019-8-9</p><h3 id="shell-连接-mysql-的几种方式" tabindex="-1"><a class="header-anchor" href="#shell-连接-mysql-的几种方式" aria-hidden="true">#</a> <code>shell</code> 连接 <code>Mysql</code> 的几种方式</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">&quot;apper&quot;</span> <span class="token comment"># 用户名</span>\n<span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token string">&quot;superme@2019&quot;</span> <span class="token comment"># 密码</span>\n<span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token string">&quot;192.168.1.110&quot;</span> <span class="token comment"># ip地址</span>\n<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token string">&quot;3306&quot;</span> <span class="token comment"># 端口号</span>\n<span class="token assign-left variable">database</span><span class="token operator">=</span><span class="token string">&quot;upay&quot;</span> <span class="token comment"># 数据库名称</span>\n<span class="token assign-left variable">sql_string</span><span class="token operator">=</span><span class="token string">&quot;SELECT * FROM ThirdUQUserRelation;&quot;</span> <span class="token comment"># 查询语句</span>\n\n<span class="token comment"># 方式1</span>\nmysql -h<span class="token variable">${host}</span> -P<span class="token variable">${port}</span> -u<span class="token variable">${user}</span> -p<span class="token variable">${password}</span> <span class="token variable">$database</span> -e <span class="token string">&quot;<span class="token variable">${sql_string}</span>&quot;</span>\n\n<span class="token comment"># 方式2</span>\nmysql --host<span class="token operator">=</span><span class="token variable">${host}</span> --port<span class="token operator">=</span><span class="token variable">${port}</span> --user<span class="token operator">=</span><span class="token variable">${user}</span> --password<span class="token operator">=</span><span class="token variable">${password}</span> --database<span class="token operator">=</span><span class="token variable">$database</span> -e <span class="token string">&quot;<span class="token variable">${sql_string}</span>&quot;</span>\n\n<span class="token comment"># 方式3</span>\n<span class="token assign-left variable">file_path</span><span class="token operator">=</span><span class="token string">&quot;/path/to/sql&quot;</span>\nmysql -h<span class="token variable">${host}</span> -P<span class="token variable">${port}</span> -u<span class="token variable">${user}</span> -p<span class="token variable">${password}</span> <span class="token variable">$database</span> <span class="token operator">&lt;</span> <span class="token variable">${file_path}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><h5 id="显示数据库" tabindex="-1"><a class="header-anchor" href="#显示数据库" aria-hidden="true">#</a> 显示数据库</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>show databases;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="使用某个数据库" tabindex="-1"><a class="header-anchor" href="#使用某个数据库" aria-hidden="true">#</a> 使用某个数据库</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>use &lt;数据库名称&gt;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="创建一个数据库" tabindex="-1"><a class="header-anchor" href="#创建一个数据库" aria-hidden="true">#</a> 创建一个数据库</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>create database &lt;数据库名称&gt;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="删除一个数据库" tabindex="-1"><a class="header-anchor" href="#删除一个数据库" aria-hidden="true">#</a> 删除一个数据库</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>drop database &lt;数据库名称&gt;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="表操作" tabindex="-1"><a class="header-anchor" href="#表操作" aria-hidden="true">#</a> 表操作</h3><h5 id="显示所有表" tabindex="-1"><a class="header-anchor" href="#显示所有表" aria-hidden="true">#</a> 显示所有表</h5><p>(需要先通过 use 语句进入到该数据库里面)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>show tables;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表" aria-hidden="true">#</a> 创建表</h5><p>基本语法形式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>create table table_name (column_name column_type);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>创建表示例:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>CREATE TABLE <span class="token variable"><span class="token variable">`</span>ExchangeRate<span class="token variable">`</span></span> <span class="token punctuation">(</span>\n  <span class="token variable"><span class="token variable">`</span><span class="token function">id</span><span class="token variable">`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL AUTO_INCREMENT,\n  <span class="token variable"><span class="token variable">`</span>baseCurrencyCode<span class="token variable">`</span></span> varchar<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;USD&#39;</span>    COMMENT <span class="token string">&#39;基础币种代号&#39;</span>,\n  <span class="token variable"><span class="token variable">`</span>targetCurrencyCode<span class="token variable">`</span></span> varchar<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;&#39;</span>  COMMENT <span class="token string">&#39;目标币种代号&#39;</span>,\n  <span class="token variable"><span class="token variable">`</span>baseAmount<span class="token variable">`</span></span> varchar<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;1&#39;</span>        COMMENT <span class="token string">&#39;基础货币数量&#39;</span>,\n  <span class="token variable"><span class="token variable">`</span>targetAmount<span class="token variable">`</span></span> Double<span class="token punctuation">(</span><span class="token number">10</span>, <span class="token number">2</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;0&#39;</span>      COMMENT <span class="token string">&#39;目标货币数量&#39;</span>,\n  <span class="token variable"><span class="token variable">`</span><span class="token function">time</span><span class="token variable">`</span></span> varchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>,\n  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span><span class="token function">id</span><span class="token variable">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><p><code>AUTO_INCREMENT</code> 表示自增</p></li><li><p><code>NOT NULL</code> 表示该字段的值不为空</p></li><li><p><code>DEFAULT</code> 表示该字段的默认值</p></li><li><p><code>COMMENT</code> 表示注释内容</p></li></ul><h5 id="删除表" tabindex="-1"><a class="header-anchor" href="#删除表" aria-hidden="true">#</a> 删除表</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DROP TABLE table_name;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="插入数据" tabindex="-1"><a class="header-anchor" href="#插入数据" aria-hidden="true">#</a> 插入数据</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>INSERT INTO table_name (field1, field2, ...) VALUES (value1, value2, ...);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h5><p>基本语法形式</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>SELECT column_name, column_name\nFROM table_name\n<span class="token punctuation">[</span>WHERE Clause<span class="token punctuation">]</span>\n<span class="token punctuation">[</span>LIMIT N<span class="token punctuation">]</span>\n<span class="token punctuation">[</span>OFFSET M<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p><code>column_name</code> 表示字段名称，使用 * 来代表所有字段;</p></li><li><p><code>[WHERE Clause]</code> where 语句来过滤筛选条件(<code>可选</code>);</p></li><li><p><code>[LIMIT N]</code> limit 语句来制定返回数据的数据(<code>可选</code>);</p></li><li><p><code>[OFFSET M]</code> offset 语句来指定开始查询的偏移量，默认情况下偏移量为0(<code>可选</code>);</p></li></ul><h5 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h5><p>基本语法形式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>UPDATE table_name SET filed1=new-value1, field2=new-value2\n[WHERE Clause];\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h5><p>基本语法形式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DELETE FROM table_name [WHERE Clause];\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="like-子句" tabindex="-1"><a class="header-anchor" href="#like-子句" aria-hidden="true">#</a> <code>LIKE</code> 子句</h5><p>Like 子句可以使用类似正则表达似的进行匹配搜索。</p><p>基本语法形式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SELECT field1, field2,...fieldN \nFROM table_name\nWHERE field1 LIKE condition1 [AND [OR]] filed2 = &#39;somevalue&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><p>LIKE 通常与 % 一同使用，类似于一个元字符的搜索。</p></li><li><p><code>%</code> 表示任意 0 个或多个字符。可匹配任意类型和长度的字符，有些情况下若是中文，请使用两个百分号（%%）表示。</p></li><li><p><code>_</code> 表示任意单个字符。匹配单个任意字符，它常用来限制表达式的字符长度语句。</p></li><li><p><code>[]</code> 表示括号内所列字符中的一个（类似正则表达式）。指定一个字符、字符串或范围，要求所匹配对象为它们中的任一个。</p></li><li><p><code>[^]</code> 表示不在括号所列之内的单个字符。其取值和 [] 相同，但它要求所匹配对象为指定字符以外的任一个字符。</p></li></ul><p><code>DISTINCT</code> 删除重复数据(用法 <code>distinct(filed1)</code> )</p><p><code>ORDER BY</code> 字段排序, 使用 ASC 或 DESC 关键字来设置查询结果是按升序或降序排列。 默认情况下，它是按升序排列 (用法 <code>order by age desc</code> )</p><p><code>GROUP BY</code> 对结果分组 (用法 <code>group name</code>)</p><h5 id="连表查询" tabindex="-1"><a class="header-anchor" href="#连表查询" aria-hidden="true">#</a> 连表查询</h5><ul><li><p><code>INNER JOIN（内连接,或等值连接）</code>：获取两个表中字段匹配关系的记录。</p></li><li><p><code>LEFT JOIN（左连接）</code>：获取左表所有记录，即使右表没有对应匹配的记录。</p></li><li><p><code>RIGHT JOIN（右连接）</code>： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</p></li></ul><h5 id="alter-命令" tabindex="-1"><a class="header-anchor" href="#alter-命令" aria-hidden="true">#</a> <code>ALTER</code> 命令</h5><p>当我们需要修改数据表名或者修改数据表字段时，就需要使用到MySQL ALTER命令。</p><p>删除表 <code>table_name</code> 中的字段 <code>i</code>:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ALTER TABLE table_name DROP i;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在表 <code>table_name</code> 中添加 <code>INT</code> 类型的字段 <code>i</code>:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ALTER TABLE table_name ADD i INT;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在表 <code>table_name</code> 中修改字段 <code>c</code> 的类型为 <code>char(10)</code> :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ALTER TABLE table_name MODIFY c CHAR(10);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改表名 <code>table_name</code> 为 <code>new_table_name</code>:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ALTER TABLE table_name RENAME TO new_table_name;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常见函数" tabindex="-1"><a class="header-anchor" href="#常见函数" aria-hidden="true">#</a> 常见函数</h3><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>json_extract</td><td>提取 json 字符串</td></tr><tr><td>replace(s1, s2)</td><td>s2 替换 s1</td></tr><tr><td>count(*)</td><td>统计次数</td></tr><tr><td>trim</td><td>去掉字符串首尾空格</td></tr><tr><td>NOW()</td><td>当前日期和时间</td></tr><tr><td>DATE()</td><td>当前日期</td></tr><tr><td>CURTIME()</td><td>当前时间</td></tr></tbody></table><h4 id="instr" tabindex="-1"><a class="header-anchor" href="#instr" aria-hidden="true">#</a> INSTR</h4><blockquote><p>INSTR(str, substr)</p></blockquote><p><code>INSTR()</code> 函数返回字符串中子字符串第一次出现的位置。如果在<code>str</code>中找不到子字符串，则<code>INSTR()</code>函数返回零(<code>0</code>)。</p><p>该函数不区分大小写。</p><p>作用类似 <code>LIKE</code> 运算符。</p><h4 id="locate" tabindex="-1"><a class="header-anchor" href="#locate" aria-hidden="true">#</a> LOCATE</h4><blockquote><p>LOCATE(substr, str)</p></blockquote><p>返回字符串 <code>str</code> 中第一次出现子字符串 <code>substr</code> 的位置。</p><p>如果 substr 不在 str 中， 返回 0</p><p>如果 substr 或者 str 为 NULL， 返回 null</p><p>其他情况，返回大于 0 的值</p><h4 id="cast" tabindex="-1"><a class="header-anchor" href="#cast" aria-hidden="true">#</a> CAST</h4><blockquote><p>CAST(expression AS TYPE)</p></blockquote><h4 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> REPLACE</h4><blockquote><p>REPLACE(str, old_string, new_string)</p></blockquote><p>将 str 中的 old_string 替换为 new_string 。</p><h4 id="json-extract" tabindex="-1"><a class="header-anchor" href="#json-extract" aria-hidden="true">#</a> JSON_EXTRACT</h4><blockquote><p>JSON_EXTRACT(json_doc, path)</p></blockquote>',76),l=(0,e.Uk)("从 json 字符串中提取指定字段的值 "),p={href:"https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html#operator_json-column-path",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("使用举例"),o=(0,e.uE)('<div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>mysql&gt; SELECT c, JSON_EXTRACT(c, &quot;$.id&quot;), g\n     &gt; FROM jemp\n     &gt; WHERE JSON_EXTRACT(c, &quot;$.id&quot;) &gt; 1\n     &gt; ORDER BY JSON_EXTRACT(c, &quot;$.name&quot;);\n+-------------------------------+-----------+------+\n| c                             | c-&gt;&quot;$.id&quot; | g    |\n+-------------------------------+-----------+------+\n| {&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;} | &quot;3&quot;       |    3 |\n| {&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;}  | &quot;4&quot;       |    4 |\n| {&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;}  | &quot;2&quot;       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\n# -&gt; 操作符, 当作函数的别名\nmysql&gt; SELECT c, c-&gt;&quot;$.id&quot;, g\n     &gt; FROM jemp\n     &gt; WHERE c-&gt;&quot;$.id&quot; &gt; 1\n     &gt; ORDER BY c-&gt;&quot;$.name&quot;;\n+-------------------------------+-----------+------+\n| c                             | c-&gt;&quot;$.id&quot; | g    |\n+-------------------------------+-----------+------+\n| {&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;} | &quot;3&quot;       |    3 |\n| {&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;}  | &quot;4&quot;       |    4 |\n| {&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;}  | &quot;2&quot;       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="操作案例" tabindex="-1"><a class="header-anchor" href="#操作案例" aria-hidden="true">#</a> 操作案例</h3><h4 id="复制表" tabindex="-1"><a class="header-anchor" href="#复制表" aria-hidden="true">#</a> 复制表</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token operator">&lt;</span>target<span class="token operator">-</span><span class="token keyword">table</span><span class="token operator">&gt;</span> \n<span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> app_id<span class="token punctuation">,</span> channel_id<span class="token punctuation">,</span> token<span class="token punctuation">,</span> first_pay<span class="token punctuation">,</span> stat<span class="token punctuation">,</span> device_id<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time<span class="token punctuation">)</span> \n<span class="token keyword">select</span> \nuser_id<span class="token punctuation">,</span> app_id<span class="token punctuation">,</span> channel_id<span class="token punctuation">,</span> token<span class="token punctuation">,</span> first_pay<span class="token punctuation">,</span> stat<span class="token punctuation">,</span> device_id<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time\n<span class="token keyword">from</span> <span class="token operator">&lt;</span>source<span class="token operator">-</span><span class="token keyword">table</span><span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><h5 id="配置文件位置" tabindex="-1"><a class="header-anchor" href="#配置文件位置" aria-hidden="true">#</a> 配置文件位置</h5><p>从命令行终端运行此命令，将在寻找Linux/BSD / OS X系统中的MySQL配置文件 my.cnf 文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql --help | grep &#39;Default options&#39; -A 1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>上面命令执行后，会有这样的输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Default options are read from the following files in the given order:\n/etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf ~/.my.cnf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h3>',11),c={href:"https://www.runoob.com/mysql/mysql-tutorial.html",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("MySQL 教程"),d={href:"https://github.com/jaywcjlove/mysql-tutorial/blob/master/chapter2/2.5.md",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("MySQL 配置修改"),b={},m=(0,n(3744).Z)(b,[["render",function(a,s){const n=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[l,(0,e._)("a",p,[r,(0,e.Wm)(n)])]),o,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",c,[i,(0,e.Wm)(n)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",d,[u,(0,e.Wm)(n)])])])])],64)}]])},3744:(a,s)=>{s.Z=(a,s)=>{for(const[n,e]of s)a[n]=e;return a}}}]);