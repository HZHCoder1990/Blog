"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4139],{7508:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-22e00506",path:"/iOS/unity-ios-bridge.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"iOS 和 Unity 相互调用",slug:"ios-和-unity-相互调用",children:[]},{level:3,title:"参考",slug:"参考",children:[]}],filePathRelative:"iOS/unity-ios-bridge.md",git:{updatedTime:1633949964e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:1}]}}},6855:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(6252);const t=(0,e.uE)('<h3 id="ios-和-unity-相互调用" tabindex="-1"><a class="header-anchor" href="#ios-和-unity-相互调用" aria-hidden="true">#</a> iOS 和 Unity 相互调用</h3><h4 id="unity-调用-ios" tabindex="-1"><a class="header-anchor" href="#unity-调用-ios" aria-hidden="true">#</a> Unity 调用 iOS</h4><ol><li>在 <code>.cs</code> 文件内定义如下函数</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token punctuation">[</span><span class="token function">DllImport</span> <span class="token punctuation">(</span><span class="token string">&quot;__Internal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\nprivate <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token keyword">float</span> <span class="token function">FooPluginFunction</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 参数为字符串类型，返回值 float 类型</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>在 <code>.cpp.</code> 或者 <code>.mm</code> 文件内实现如下函数</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">float</span> <span class="token function">FooPluginFunction</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> name<span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n      <span class="token comment">// Unity 端调用到 iOS 端</span>\n    \t<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;name is = %s&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="ios-调用-unity" tabindex="-1"><a class="header-anchor" href="#ios-调用-unity" aria-hidden="true">#</a> iOS 调用 Unity</h4><ol><li>在 <code>.cpp</code>或 <code>.mm</code> 文件内，调用如下方法</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// 第一个参数: 脚本挂载的 Object 的名称</span>\n<span class="token comment">// 第二个参数: 在 CS 文件上定义的方法名称</span>\n<span class="token comment">// 第三个参数: 传递的参数（只支持传递 string 类型的内容）</span>\n<span class="token function">UnitySendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;GameObjectName1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;iosToUnity&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Message to send&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>在 <code>.cs</code> 文件内实现，如下方法</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>public <span class="token keyword">void</span> <span class="token function">iosToUnity</span><span class="token punctuation">(</span>string msg<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// iOS 端调用到 Unity 端</span>\n  \tDebug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;iOS to Unity, msg = &quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="ios-中间层写法" tabindex="-1"><a class="header-anchor" href="#ios-中间层写法" aria-hidden="true">#</a> iOS 中间层写法</h4><ol><li>新建 <code>Unity_iOS_Bridge.h</code> 和 <code>Unity_iOS_Bridge.mm</code> 文件, 文件放在 Unity 工程的 <code>Assets/Plugins/iOS/ </code> 文件夹下</li><li><code>Unity_iOS_Bridge.h</code> 文件写法：</li></ol><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>#import &lt;Foundation/Foundation.h&gt;\n#import &quot;UnityAppController.h&quot;\n// 集成自 UnityAppController\n@interface Unity_iOS_Bridge : UnityAppController\n\n@end\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li><code>Unity_iOS_Bridge.mm</code> 文件写法：</li></ol><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>// Unity_iOS_Bridge 添加分类\nIMPL_APP_CONTROLLER_SUBCLASS(Unity_iOS_Bridge)\n\n@implementation Unity_iOS_Bridge\n\n#pragma mark - 生命周期\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\t\t// 先执行父类的生命周期方法  \n  \t[super application:application didFinishLaunchingWithOptions:launchOptions];\n    \n    // 执行自定义操作\n    \n    return YES;\n}\n\n@end\n\nextern &quot;C&quot; {\n  float FooPluginFunction()\n  {\n      // Unity 端调用到iOS端\n      return 1.0\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h3>',17),i={href:"https://docs.unity3d.com/Manual/PluginsForIOS.html",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("plugins for iOS"),l={},o=(0,a(3744).Z)(l,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",i,[p,(0,e.Wm)(a)])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);