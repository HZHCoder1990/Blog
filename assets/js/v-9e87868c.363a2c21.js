"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8748],{3403:(s,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t={key:"v-9e87868c",path:"/shell/jq.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"jq 使用总结",slug:"jq-使用总结",children:[]}],filePathRelative:"shell/jq.md",git:{updatedTime:1633945792e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:2}]}}},9829:(s,n,a)=>{a.r(n),a.d(n,{default:()=>i});var t=a(6252);const e=(0,t.uE)('<h3 id="jq-使用总结" tabindex="-1"><a class="header-anchor" href="#jq-使用总结" aria-hidden="true">#</a> jq 使用总结</h3><h4 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h4><blockquote><p>Jq is a lightweight and flexible command-line JSON processor.</p></blockquote><p>jq 是一个用来处理json数据的命令行工具</p><h4 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h4><blockquote><p>brew install jq</p></blockquote><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>jq  <span class="token punctuation">[</span>options<span class="token punctuation">]</span>  <span class="token operator">&lt;</span>jq filter<span class="token operator">&gt;</span>  <span class="token punctuation">[</span>file<span class="token punctuation">..</span>.<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h4><h5 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1" aria-hidden="true">#</a> <code>.</code> 语法</h5><p>把输入转输出</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;{&quot;foo&quot;: 0}&#39;</span> <span class="token operator">|</span> jq <span class="token builtin class-name">.</span>\n<span class="token punctuation">{</span>\n  <span class="token string">&quot;foo&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="对象的索引" tabindex="-1"><a class="header-anchor" href="#对象的索引" aria-hidden="true">#</a> 对象的索引</h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>         jq <span class="token string">&#39;.foo&#39;</span>\nInput:   <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span><span class="token builtin class-name">:</span> <span class="token number">42</span>, <span class="token string">&quot;bar&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;less interesting data&quot;</span><span class="token punctuation">}</span>\nOutput:  <span class="token number">42</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="数组索引-2" tabindex="-1"><a class="header-anchor" href="#数组索引-2" aria-hidden="true">#</a> 数组索引 <code>.[2]</code></h5><p>数组索引从0开始，所以 <code>.[2]</code> 表示第3个元素。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t       jq <span class="token string">&#39;.[0]&#39;</span>\nInput:\t <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;JSON&quot;</span>, <span class="token string">&quot;good&quot;</span>:true<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;XML&quot;</span>, <span class="token string">&quot;good&quot;</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>\nOutput:\t <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;JSON&quot;</span>, <span class="token string">&quot;good&quot;</span>:true<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="数组切片-10-15" tabindex="-1"><a class="header-anchor" href="#数组切片-10-15" aria-hidden="true">#</a> 数组切片 <code>.[10: 15]</code></h5><p><code>.[10: 15]</code> 表示提取数组内的元素：从第 11 个元素开始到第16个元素结束，包括第 11 个元素，不包括第 16 个元素</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t      jq <span class="token string">&#39;.[2:4]&#39;</span>\nInput\t  <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span>,<span class="token string">&quot;b&quot;</span>,<span class="token string">&quot;c&quot;</span>,<span class="token string">&quot;d&quot;</span>,<span class="token string">&quot;e&quot;</span><span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span><span class="token string">&quot;c&quot;</span>, <span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="数组遍历" tabindex="-1"><a class="header-anchor" href="#数组遍历" aria-hidden="true">#</a> 数组遍历 <code>.[]</code></h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t      jq <span class="token string">&#39;.[]&#39;</span>\nInput\t  <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;JSON&quot;</span>, <span class="token string">&quot;good&quot;</span>:true<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;XML&quot;</span>, <span class="token string">&quot;good&quot;</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;JSON&quot;</span>, <span class="token string">&quot;good&quot;</span>:true<span class="token punctuation">}</span>\n        <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;XML&quot;</span>, <span class="token string">&quot;good&quot;</span>:false<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="语法-2" tabindex="-1"><a class="header-anchor" href="#语法-2" aria-hidden="true">#</a> <code>,</code> 语法</h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t      jq <span class="token string">&#39;.foo, .bar&#39;</span>\nInput\t  <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span><span class="token builtin class-name">:</span> <span class="token number">42</span>, <span class="token string">&quot;bar&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;something else&quot;</span>, <span class="token string">&quot;baz&quot;</span><span class="token builtin class-name">:</span> true<span class="token punctuation">}</span>\nOutput\t<span class="token number">42</span>\n        <span class="token string">&quot;something else&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="管道语法" tabindex="-1"><a class="header-anchor" href="#管道语法" aria-hidden="true">#</a> 管道语法 <code>|</code></h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t      jq <span class="token string">&#39;.[] | .name&#39;</span>\nInput\t  <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;JSON&quot;</span>, <span class="token string">&quot;good&quot;</span>:true<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;XML&quot;</span>, <span class="token string">&quot;good&quot;</span>:false<span class="token punctuation">}</span><span class="token punctuation">]</span>\nOutput\t<span class="token string">&quot;JSON&quot;</span>\n        <span class="token string">&quot;XML&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="常见内置函数" tabindex="-1"><a class="header-anchor" href="#常见内置函数" aria-hidden="true">#</a> 常见内置函数</h5><h6 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h6><ul><li>用于数组的个数</li><li>用于对象的key-value对数</li><li>字符串的支付长度</li><li>null 的 length 为0</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;.[] | length&#39;</span>\nInput\t  <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1,2</span><span class="token punctuation">]</span>, <span class="token string">&quot;string&quot;</span>, <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span>:2<span class="token punctuation">}</span>, null<span class="token punctuation">]</span>\nOutput\t<span class="token number">2</span>\n        <span class="token number">6</span>\n\t\t\t\t<span class="token number">1</span>\n\t\t\t\t<span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h6 id="keys" tabindex="-1"><a class="header-anchor" href="#keys" aria-hidden="true">#</a> keys</h6><ul><li>用于数组，表示数组的索引。从 0 到 length -1</li><li>用与对象，表示对象的所有key</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;keys&#39;</span>\nInput\t\t<span class="token punctuation">{</span><span class="token string">&quot;abc&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>, <span class="token string">&quot;abcd&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>, <span class="token string">&quot;Foo&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span><span class="token punctuation">}</span>\nOutput\t<span class="token punctuation">[</span><span class="token string">&quot;Foo&quot;</span>, <span class="token string">&quot;abc&quot;</span>, <span class="token string">&quot;abcd&quot;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h6 id="map-x" tabindex="-1"><a class="header-anchor" href="#map-x" aria-hidden="true">#</a> map(x)</h6><ul><li>对数组的每个元素执行 x 操作， 返回一个新数组</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;map(.+1)&#39;</span>\nInput\t\t<span class="token punctuation">[</span><span class="token number">1,2</span>,3<span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span><span class="token number">2,3</span>,4<span class="token punctuation">]</span>\n\n\n\t\t\t\tjq <span class="token string">&#39;map_values(.+1)&#39;</span>\nInput\t\t<span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>, <span class="token string">&quot;b&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>, <span class="token string">&quot;c&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span><span class="token punctuation">}</span>\nOutput\t<span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>, <span class="token string">&quot;b&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>, <span class="token string">&quot;c&quot;</span><span class="token builtin class-name">:</span> <span class="token number">4</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h6 id="has-key" tabindex="-1"><a class="header-anchor" href="#has-key" aria-hidden="true">#</a> has(key)</h6><ul><li>判断 key 是否存在</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;map(has(&quot;foo&quot;))&#39;</span>\nInput\t\t<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span><span class="token builtin class-name">:</span> <span class="token number">42</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span>true, false<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h6 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> sort</h6><ul><li>对输入内容进行排序</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;sort&#39;</span>\nInput\t\t<span class="token punctuation">[</span><span class="token number">8,3</span>,null,6<span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span>null,3,6,8<span class="token punctuation">]</span>\n\n\t\t\t\tjq <span class="token string">&#39;sort_by(.foo)&#39;</span>\nInput\t\t<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:4, <span class="token string">&quot;bar&quot;</span>:10<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:3, <span class="token string">&quot;bar&quot;</span>:100<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:2, <span class="token string">&quot;bar&quot;</span>:1<span class="token punctuation">}</span><span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:2, <span class="token string">&quot;bar&quot;</span>:1<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:3, <span class="token string">&quot;bar&quot;</span>:100<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&quot;foo&quot;</span>:4, <span class="token string">&quot;bar&quot;</span>:10<span class="token punctuation">}</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h6 id="startswith-str" tabindex="-1"><a class="header-anchor" href="#startswith-str" aria-hidden="true">#</a> startswith(str)</h6><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t\t\t\tjq <span class="token string">&#39;[.[]|startswith(&quot;foo&quot;)]&#39;</span>\nInput\t\t<span class="token punctuation">[</span><span class="token string">&quot;fo&quot;</span>, <span class="token string">&quot;foo&quot;</span>, <span class="token string">&quot;barfoo&quot;</span>, <span class="token string">&quot;foobar&quot;</span>, <span class="token string">&quot;barfoob&quot;</span><span class="token punctuation">]</span>\nOutput\t<span class="token punctuation">[</span>false, true, false, true, false<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h6 id="endswith-str" tabindex="-1"><a class="header-anchor" href="#endswith-str" aria-hidden="true">#</a> endswith(str)</h6><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\t\t\t\tjq &#39;[.[]|endswith(&quot;foo&quot;)]&#39;\nInput\t\t[&quot;foobar&quot;, &quot;barfoo&quot;]\nOutput\t[false, true]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句" aria-hidden="true">#</a> 条件语句</h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\t      jq <span class="token string">&#39;if . == 0 then &quot;zero&quot; elif . == 1 then &quot;one&quot; else &quot;many&quot; end&#39;</span>\nInput\t  <span class="token number">2</span>\nOutput\t<span class="token string">&quot;many&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h4>',49),p={href:"https://stedolan.github.io/jq/download/",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("Download jq"),l={href:"https://stedolan.github.io/jq/manual/",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("jq Mannual (development version)"),c={},i=(0,a(3744).Z)(c,[["render",function(s,n){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[(0,t._)("a",p,[o,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",l,[u,(0,t.Wm)(a)])])],64)}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,t]of n)s[a]=t;return s}}}]);