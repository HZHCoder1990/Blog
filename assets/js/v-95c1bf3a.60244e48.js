"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9042],{6869:(s,e,n)=>{n.r(e),n.d(e,{data:()=>a});const a={key:"v-95c1bf3a",path:"/shell/plutil.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"shell/plutil.md",git:{updatedTime:1633942617e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:1}]}}},396:(s,e,n)=>{n.r(e),n.d(e,{default:()=>t});const a=(0,n(6252).uE)('<p>生成plist文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict/&gt;&lt;/plist&gt;&#39;</span> <span class="token operator">&gt;</span> option.plist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>插入 插入字符串 在option.plist文件中插入string类型的键值对, 键{key} 值{value}</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>plutil -insert <span class="token punctuation">{</span>key<span class="token punctuation">}</span> -string <span class="token punctuation">{</span>valu<span class="token punctuation">}</span>e option.plist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>插入值的类型有:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-bool: 布尔类型\n-integer: 64位整数\n-float: 64位浮点数\n-string: 字符串\n-date: 日期\n-data: base64 编码的字符串\n-xml: xml 属性\n-json: json 片段\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>插入字典</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>plutil -insert my-dic -xml <span class="token operator">&lt;</span>dict/<span class="token operator">&gt;</span> option.plist\nplutil -insert my-dic.name -string peak option.plist\nplutil -insert my-dic.<span class="token string">&quot;com\\.company&quot;</span> -string <span class="token builtin class-name">test</span> option.plist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>创建一个 my-dic 的字典，插入key是name，value是peak的键值对，插入key是com.company, value是test的键值对 字典内的key使用 <code>.</code> 分割，放在字典名称后面，如果key包含 <code>.</code> 使用 <code>\\</code> 来转义。</p><p>修改 基本语法</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>plutil -replace keypath -type value\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>删除 基本语法</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>plutil -remove keypath\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查找</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>plutil -extract keypath <span class="token function">fmt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',15),l={},t=(0,n(3744).Z)(l,[["render",function(s,e){return a}]])},3744:(s,e)=>{e.Z=(s,e)=>{for(const[n,a]of e)s[n]=a;return s}}}]);