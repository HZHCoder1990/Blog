"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3051],{4047:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-1163b988",path:"/shell/find.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"shell/find.md",git:{updatedTime:1633942617e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:1}]}}},5685:(e,n,s)=>{s.r(n),s.d(n,{default:()=>d});const a=(0,s(6252).uE)('<p align="right">2019-7-26</p><h4 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>find [path] [expression]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式" aria-hidden="true">#</a> 表达式</h4><p>表达式可以指定如下操作符，操作符号对应的数字可以在前面添加<code>+</code> 或 <code>-</code>， <code>+</code>表示大于， <code>-</code> 表示小于， 不加表示等于。</p><p><code>-atime n</code> 最后访问时间到现在的时间间隔，<code>n</code> 表示具体数字，数字之后跟的时间单位有:</p><pre><code>s second\nm minute(60 seconds)\nh hour(60 minutes)\nd day(24 hours)\nw week(7 days)\n</code></pre><p><code>-delete</code> 删除找到的文件或者文件夹</p><p><code>-d</code> 递归查找的层级, 等同 <code>-depth</code> ,默认遍历所有文件夹</p><p><code>-empty</code> 查找空的文件或文件夹</p><p><code>-exec</code> 执行程序，必须以<code>;</code> 结尾</p><p><code>-mtime n</code> 上次修改时间到现在的时间间隔, <code>n</code> 表示具体数字，后面可以跟时间单位</p><p><code>-name</code> 指定文件名, 可以使用正则表达式</p><p><code>-print</code> 输出文件名</p><p><code>size n</code> 指定文件大小, <code>n</code> 后面指定的类型如下:</p><pre><code>k  kilbytes(1024 bytes)\nM  megabytes(1024 kilobytes)\nG  gigabytes(1024 megabytes)\nT  terabytes(1024 gigabytes)\nP  petabytes(2014 terabytes)\n</code></pre><p><code>type t</code> 指定文件类型, <code>t</code> 的类型如下:</p><pre><code>b  block special\nc  character special\nd  directory\nf  regular file\nl  symbolic link\np  FIFO\ns  socket\n</code></pre><p><code>-and</code> 多个表达式执行与操作</p><p><code>-or</code> 多个表达执行式或操作</p><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token punctuation">\\</span><span class="token operator">!</span> -name <span class="token string">&quot;*.txt&quot;</span> -print\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>输出当前目录下所有的不是 txt 的文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -name <span class="token string">&quot;*.txt&quot;</span> -d <span class="token number">1</span> -type f -empty -print -delete\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到当前目录下空的 txt 文件，删除并打印文件名称。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -type f -size +10M -or -size -3k\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到当前文件夹及其子文件夹下大于 <code>60M</code> 或者小于 <code>3kb</code> 的文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -atime -2h -type f\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到当前文件夹及其子文件夹下最近 <code>2小时</code> 访问的文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> -type f -exec <span class="token builtin class-name">echo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到当前文件夹及其子文件夹下的所有文件，并输出名称。</p>',31),c={},d=(0,s(3744).Z)(c,[["render",function(e,n){return a}]])},3744:(e,n)=>{n.Z=(e,n)=>{for(const[s,a]of n)e[s]=a;return e}}}]);