"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2461],{2995:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-52d4c42d",path:"/iOS/dispatch-semaphore.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"iOS/dispatch-semaphore.md",git:{updatedTime:1633945792e3,contributors:[{name:"peak",email:"peak@jiemogame.com",commits:2}]}}},9524:(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});const a=(0,s(6252).uE)('<h4 id="gcd-信号量" tabindex="-1"><a class="header-anchor" href="#gcd-信号量" aria-hidden="true">#</a> GCD 信号量</h4><p align="right">2019-5-19</p><h4 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h4><ol><li>创建一个信号量</li></ol><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>dispatch_semaphore_t\ndispatch_semaphore_create(long value);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>该函数接受一个整形参数，可理解为一个信号量的总量。</p><ol start="2"><li>等待信号量</li></ol><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>long\ndispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>该函数会把信号量的总量 -1 ，如果 -1 之后该信号量的总量的值小于0，会阻塞当前线程（知道超时时间到达），否则会继续执行。</p><ol start="3"><li>发送信号量</li></ol><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>long\ndispatch_semaphore_signal(dispatch_semaphore_t dsema);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>该函数会把信号量的总量 +1。</p><h5 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h5><h6 id="测试线程同步" tabindex="-1"><a class="header-anchor" href="#测试线程同步" aria-hidden="true">#</a> 测试线程同步</h6><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>- (void)testSynchronize {\n    NSURL *url = [NSURL URLWithString:@&quot;https://github.com/chenxi141017/blog&quot;];\n    NSURLRequest *request = [[NSURLRequest alloc] initWithURL:url];\n    NSURLSession *session = [NSURLSession sharedSession];\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\n    NSLog(@&quot;begin request. thread = %@&quot;, [NSThread currentThread]);\n    [[session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        NSLog(@&quot;request success, thread = %@&quot;, [NSThread currentThread]);\n        dispatch_semaphore_signal(semaphore);\n    }] resume];\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n    NSLog(@&quot;received response. thread = %@&quot;, [NSThread currentThread]);\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>输出</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>2019-05-19 08:55:38.260560+0800 testSem[61543:4914620] begin request. thread = &lt;NSThread: 0x60000105d3c0&gt;{number = 1, name = main}\n2019-05-19 08:55:39.493776+0800 testSem[61543:4914676] request success, thread = &lt;NSThread: 0x600001028300&gt;{number = 5, name = (null)}\n2019-05-19 08:55:39.494228+0800 testSem[61543:4914620] received response. thread = &lt;NSThread: 0x60000105d3c0&gt;{number = 1, name = main}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h6 id="测试线程加锁" tabindex="-1"><a class="header-anchor" href="#测试线程加锁" aria-hidden="true">#</a> 测试线程加锁</h6><p>先声明变量</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>@interface ViewController ()\n@property (nonatomic, strong) NSMutableArray *array;\n@property (nonatomic, strong) dispatch_semaphore_t lock;\n@end\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>不加锁</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>- (void)testLock {\n    self.array = [NSMutableArray array];\n    self.lock = dispatch_semaphore_create(1);\n    for (NSInteger i = 0; i &lt; 5; i++) {\n        dispatch_async(dispatch_get_global_queue(0, 0), ^{\n            [self addContent:i];\n        });\n    }\n}\n\n- (void)addContent:(NSInteger)index {\n    // dispatch_semaphore_wait(self.lock, DISPATCH_TIME_FOREVER);\n    [self.array addObject:@(index)];\n    NSLog(@&quot;array = %@&quot;, self.array);\n    // dispatch_semaphore_signal(self.lock);\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>不加锁 输出</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>2019-05-19 08:57:47.899357+0800 testSem[61579:4916193] array = (\n    0,\n    1,\n    2\n)\n2019-05-19 08:57:47.899362+0800 testSem[61579:4916194] array = (\n    0,\n    1,\n    2\n)\n2019-05-19 08:57:47.899385+0800 testSem[61579:4916191] array = (\n    0,\n    1,\n    2\n)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>加锁</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>- (void)testLock {\n    self.array = [NSMutableArray array];\n    self.lock = dispatch_semaphore_create(1);\n    for (NSInteger i = 0; i &lt; 3; i++) {\n        dispatch_async(dispatch_get_global_queue(0, 0), ^{\n            [self addContent:i];\n        });\n    }\n}\n\n- (void)addContent:(NSInteger)index {\n    dispatch_semaphore_wait(self.lock, DISPATCH_TIME_FOREVER);\n    [self.array addObject:@(index)];\n    NSLog(@&quot;array = %@&quot;, self.array);\n    dispatch_semaphore_signal(self.lock);\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>加锁 输出</p><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>2019-05-19 08:59:06.386425+0800 testSem[61606:4917387] array = (\n    1\n)\n2019-05-19 08:59:06.386570+0800 testSem[61606:4917386] array = (\n    1,\n    0\n)\n2019-05-19 08:59:06.386696+0800 testSem[61606:4917388] array = (\n    1,\n    0,\n    2\n)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',28),r={},l=(0,s(3744).Z)(r,[["render",function(e,n){return a}]])},3744:(e,n)=>{n.Z=(e,n)=>{for(const[s,a]of n)e[s]=a;return e}}}]);